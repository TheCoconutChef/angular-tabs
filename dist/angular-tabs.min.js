"use strict";angular.module("angularTabs",[]),angular.module("angularTabs").directive("atLink",["atTabManager",function(a){return{restrict:"EA",scope:{title:"@title",template:"@template",tabGroup:"@tabGroup",args:"=args"},link:function(b,c,d){c.bind("click",function(){var c=a.getTabGroup(b.tabGroup),d={title:b.title,template:b.template,args:b.args};try{c.addTabAndActivate(d)}catch(e){}})}}}]),angular.module("angularTabs").directive("partial",function(){return{restrict:"E",scope:{args:"=args",template:"@template"},replace:!0,template:'<div ng-include="template"></div>'}}),angular.module("angularTabs").directive("atTabList",["atTabManager",function(a){return{restrict:"EA",scope:{tabGroupName:"@tabGroupName",templateUrl:"@templateUrl"},controller:["$scope",function(b){b.tabGroup=a.getTabGroup(b.tabGroupName),b.staticTabs=b.tabGroup.getStaticTabs(),b.tabs=b.tabGroup.getTabs(),b.activate=function(a){b.tabGroup.activateTab(a)},b.close=function(a){b.tabGroup.removeTab(a)}}],template:'<ng-include src="templateUrl"></ng-include>'}}]),angular.module("angularTabs").directive("atTabVisualizer",["atTabManager",function(a){return{restrict:"EA",scope:{tabGroupName:"@tabGroupName",templateUrl:"@templateUrl"},controller:["$scope",function(b){b.tabGroup=a.getTabGroup(b.tabGroupName),b.tabs=b.tabGroup.getTabs(),b.staticTabs=b.tabGroup.getStaticTabs()}],template:'<ng-include src="templateUrl"></ng-include>'}}]),angular.module("angularTabs").factory("atTabGroupFactory",function(){function a(a){function b(a){return a in l||a in k}function c(a){var b;for(b=0;b<i.length&&a!==i[b].title;b++);return b}function d(c,d){if(b(c.title))throw"Tab "+c.title+" already exists in "+a;d==f?(j.push(c),k[c.title]=""):(i.push(c),l[c.title]="")}function e(c,d){for(var e=0;e<c.length;e++)if(b(c[e].title))throw"Tab "+c[e].title+" already exists in "+a;if(d==f)for(var e=0;e<c.length;e++)j.push(c[e]),k[c[e].title]="";else for(var e=0;e<c.length;e++)i.push(c[e]),l[c[e].title]=""}var f=0,g=1,a=a,h="",i=[],j=[],k={},l={};this.getTabGroupName=function(){return a},this.addTab=function(a){d(a,g)},this.addTabAndActivate=function(a){d(a,g),h=a},this.addTabs=function(a){e(a,g)},this.addStaticTab=function(a){d(a,f)},this.addStaticTabs=function(a){e(a,f)},this.removeTab=function(d){if(!b(d.title))throw"Tab "+d.tit.e+" does not exist in "+a;if(d.title in k)throw"Tab "+d.title+" cannot be remove in "+a+" because it is static";var e=c(d.title);i.splice(e,1),delete l[d.title],d.title===h.title&&(h=0==e?j.length>0?j[j.length-1]:i[0]:i[e-1])},this.getTabs=function(){return i},this.getStaticTabs=function(){return j},this.activateTab=function(c){if(!b(c.title))throw"Tab "+c.title+" does not exist in "+a;h=c},this.isTabActive=function(a){return h.title===a.title},this.getCurrentActiveTab=function(){return h}}var b=function(b){return new a(b)};return{createTabGroup:b}}),angular.module("angularTabs").service("atTabManager",["atTabGroupFactory","$rootScope",function(a,b){var c={},d=function(a){return a in c},e=function(a,b){return"Tab group "+a+" "+b},f=function(b,e){if(d(b))throw"Tab group "+b+" already exists";c[b]=a.createTabGroup(b),angular.isArray(e.dynamicTabs)&&(c[b].addTabs(e.dynamicTabs),c[b].activateTab(e.dynamicTabs[0])),angular.isArray(e.staticTabs)&&(c[b].addStaticTabs(e.staticTabs),c[b].activateTab(e.staticTabs[0]))},g=function(a){if(!d(a))throw e(a,"does not exist");return c[a]};return{initializeTabGroup:f,getTabGroup:g}}]);